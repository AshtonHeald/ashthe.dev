---
import { getCollection } from "astro:content";
import getReadingTime from "reading-time";
import { toString } from "mdast-util-to-string";
import { fromMarkdown } from "mdast-util-from-markdown";
import { formatDate } from "@/utils/formatDate";

const allPosts = await getCollection("posts");

const recentPosts = allPosts
  .sort((a, b) => (a.data.pubDate < b.data.pubDate ? 1 : -1))
  .slice(0, 3)
  .map((post) => {
    const tree = fromMarkdown(String(post.body));
    const textOnPage = toString(tree);
    const readingTime = getReadingTime(textOnPage);
    const shortText = readingTime.text.replace(" read", "");
    return { ...post, minutesRead: shortText };
  });
---

<ul class="!list-none space-y-4 !pl-0">
  {
    recentPosts.map((post) => (
      <li>
        <a
          class="flex items-center gap-2 !border-b-0 !transition-all hover:opacity-60"
          href={`/blog/${post.id}`}
        >
          <span>{post.data.title}</span>
          <span class="text-muted-foreground text-sm">
            <time datetime={post.data.pubDate.toISOString()}>
              {formatDate(post.data.pubDate, { month: true, day: true })}
            </time>
            {" Â· "}
            {post.minutesRead}
          </span>
        </a>
      </li>
    ))
  }
</ul>
